<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:collections="clr-namespace:System.Collections;assembly=netstandard"
    xmlns:converters="using:Ursa.Converters"
    xmlns:system="clr-namespace:System;assembly=netstandard"
    xmlns:u="https://irihi.tech/ursa"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Design.PreviewWith>
        <!--  Theme="{DynamicResource CronPickerRulerItemTabControl}"  -->
        <TabControl Height="400" Width="900">
            <TabItem Header="WarpPanelText">
                <ScrollViewer>
                    <StackPanel>
                        <u:DatePicker Width="180" />
                        <!-- <u:TimePicker /> -->
                        <!-- <u:TimePicker /> -->
                        <!-- <u:DateTimePicker /> -->
                        <u:CronPicker
                            Classes="DefaultCronRulers"
                            VerifySteps="VerifyToSuccess"
                            Width="180">
                            <DataValidationErrors.Error>
                                <system:Exception />
                            </DataValidationErrors.Error>
                        </u:CronPicker>
                        <!--<TextBox Width="100">
                            ~1~<DataValidationErrors.Error>
                                <system:Exception />
                            </DataValidationErrors.Error>@1@
                        </TextBox>-->
                        <!--<TextBox
                            InnerLeftContent="http://"
                            InnerRightContent=".com"
                            Width="300">
                            <TextBox.Styles>
                                <Style Selector="TextBox /template/ DataValidationErrors">
                                    <Setter Property="Theme" Value="{DynamicResource TooltipLineDataValidationErrors}" />
                                </Style>
                            </TextBox.Styles>
                            <DataValidationErrors.Error>
                                <system:Exception />
                            </DataValidationErrors.Error>
                        </TextBox>-->
                        <!--<NumericUpDown Width="300">
                            <DataValidationErrors.Error>
                                <system:Exception />
                            </DataValidationErrors.Error>
                        </NumericUpDown>-->
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </Design.PreviewWith>

    <!--  Add Resources Here  -->
    <converters:TextFormattingConverter x:Key="TextFormattingConverter" />
    <converters:ListDateTimesTextConverter x:Key="ConverterListDateTimesText" />
    <converters:CronExpressionParseToTimesResultConverter x:Key="ConverterCronExpressionParseToTimesResult" />
    <!-- <converters:CronExpressionCalculationResultSuccessedConverter x:Key="ConverterCronExpressionCalculationResultSuccessed" /> -->
    <converters:WeekDayConverter x:Key="WeekDayConverter" />
    <converters:MonthConverter x:Key="MonthConverter" />
    <!--  CronPicker  -->
    <ControlTheme TargetType="u:CronPicker" x:Key="{x:Type u:CronPicker}">
        <Setter Property="Background" Value="{DynamicResource CalendarDatePickerBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CalendarDatePickerForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CalendarDatePickerBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource CalendarDatePickerBorderThickness}" />
        <Setter Property="CornerRadius" Value="{DynamicResource CalendarDatePickerCornerRadius}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="8 0" />
        <Setter Property="MinHeight" Value="{DynamicResource CalendarDatePickerDefaultHeight}" />
        <Setter Property="Template">
            <ControlTemplate TargetType="u:CronPicker">
                <DataValidationErrors Theme="{DynamicResource TooltipLineDataValidationErrors}">
                    <Panel
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        x:Name="LayoutRoot">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            x:Name="Background" />
                        <Grid
                            ColumnDefinitions="*, Auto, Auto"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                            <TextBox
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                DataValidationErrors.Errors="{Binding $parent[u:CronPicker].(DataValidationErrors.Errors)}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                HorizontalAlignment="Stretch"
                                InnerLeftContent="{TemplateBinding InnerLeftContent}"
                                InnerRightContent="{TemplateBinding InnerRightContent}"
                                MinHeight="{TemplateBinding MinHeight}"
                                Name="PART_TextBox"
                                Text="{TemplateBinding Text}"
                                Theme="{DynamicResource NonErrorTextBox}"
                                VerticalAlignment="Stretch"
                                Watermark="{TemplateBinding Watermark}" />
                            <Button
                                Command="{Binding $parent[u:CronPicker].Clear}"
                                Content="{DynamicResource IconButtonClearData}"
                                Focusable="False"
                                Grid.Column="1"
                                IsVisible="False"
                                Margin="8,0"
                                Name="ClearButton"
                                Theme="{DynamicResource InnerIconButton}" />
                            <Button
                                Content="{DynamicResource TimePickerIconGlyph}"
                                Focusable="False"
                                Grid.Column="1"
                                IsVisible="{Binding !#ClearButton.IsVisible}"
                                Margin="8,0"
                                Name="PART_Button"
                                Theme="{DynamicResource InnerIconButton}" />
                            <Button
                                Command="{Binding $parent[u:CronPicker].Enter}"
                                Focusable="True"
                                Grid.Column="2"
                                Margin="2,0"
                                Name="EnterButton" />
                            <Popup
                                Grid.Column="0"
                                Height="400"
                                HorizontalOffset="-4"
                                IsLightDismissEnabled="True"
                                IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropdownOpen, Mode=TwoWay}"
                                Name="PART_Popup"
                                Placement="BottomEdgeAlignedLeft"
                                PlacementTarget="{TemplateBinding}"
                                Width="800">
                                <Border
                                    Background="{DynamicResource ComboBoxPopupBackground}"
                                    BorderBrush="{DynamicResource ComboBoxPopupBorderBrush}"
                                    BorderThickness="{DynamicResource ComboBoxPopupBorderThickness}"
                                    BoxShadow="{DynamicResource ComboBoxPopupBoxShadow}"
                                    CornerRadius="{DynamicResource CalendarCornerRadius}"
                                    Margin="{DynamicResource ComboBoxPopupBorderMargin}"
                                    Padding="8">
                                    <Grid RowDefinitions="*,Auto">
                                        <ScrollViewer Grid.Row="0">
                                            <u:CronExpressionEditor
                                                BorderThickness="0"
                                                CornerRadius="{Binding $parent[Border].CornerRadius}"
                                                CronExpressionParser="{TemplateBinding CronExpressionParser}"
                                                CronRulerItemDataTemplates="{TemplateBinding CronRulerItemDataTemplates}"
                                                DateTimeFormat="{TemplateBinding DateTimeFormat}"
                                                DaysOfMonthRulerItemsSource="{TemplateBinding DaysOfMonthRulerItemsSource}"
                                                DaysOfWeekRulerItemsSource="{TemplateBinding DaysOfWeekRulerItemsSource}"
                                                FontSize="{DynamicResource DefaultFontSize}"
                                                HoursRulerItemsSource="{TemplateBinding HoursRulerItemsSource}"
                                                IsSecondEnabled="{TemplateBinding IsSecondEnabled}"
                                                IsYearEnabled="{TemplateBinding IsYearEnabled}"
                                                MinutesRulerItemsSource="{TemplateBinding MinutesRulerItemsSource}"
                                                MonthsRulerItemsSource="{TemplateBinding MonthsRulerItemsSource}"
                                                NextRunTimeCount="{TemplateBinding NextRunTimeCount}"
                                                SecondsRulerItemsSource="{TemplateBinding SecondsRulerItemsSource}"
                                                YearsRulerItemsSource="{TemplateBinding YearsRulerItemsSource}"
                                                x:Name="PART_CronExpressionView" />
                                        </ScrollViewer>
                                        <StackPanel
                                            Grid.Row="1"
                                            Height="40"
                                            HorizontalAlignment="Right"
                                            Orientation="Horizontal"
                                            Spacing="8">
                                            <Button
                                                Content="{DynamicResource CronPicker_ButtonText_CronExpressionEditor_OK}"
                                                IsEnabled="{Binding #PART_CronExpressionView.CronExpressionCalculationResult, Mode=OneWay, Converter={x:Static converters:CronPickerConverters.IsParseResultSuccess}}"
                                                Name="PART_EditorOKButton"
                                                Theme="{DynamicResource SolidButton}" />
                                            <Button
                                                Content="{DynamicResource CronPicker_ButtonText_CronExpressionEditor_Cancel}"
                                                Name="PART_EditorCancelButton"
                                                Theme="{DynamicResource SolidButton}" />
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Panel>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>

        <!--  VerifySteps  -->
        <Style Selector="^[VerifySteps=InputToVerifyAllowed]">
            <Setter Property="ToolTip.IsOpen" Value="False" />
            <Style Selector="^ /template/ Button#EnterButton">
                <Setter Property="IsEnabled" Value="True" />
                <Setter Property="Content" Value="{DynamicResource CronPicker_ButtonText_InputToVerifyAllowed}" />
                <Setter Property="Margin" Value="0" />
                <!-- <Setter Property="Theme" Value="{DynamicResource SolidButton}" /> -->
            </Style>
        </Style>
        <Style Selector="^[VerifySteps=Verify]">
            <Setter Property="ToolTip.IsOpen" Value="False" />
            <Style Selector="^ /template/ Button#EnterButton">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Content" Value="" />
                <Setter Property="Width" Value="0" />
            </Style>
        </Style>
        <Style Selector="^[VerifySteps=Input]">
            <Setter Property="ToolTip.IsOpen" Value="False" />
            <Style Selector="^ /template/ Button#EnterButton">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Content" Value="" />
                <Setter Property="Width" Value="0" />
            </Style>
        </Style>
        <Style Selector="^[VerifySteps=VerifyError]">
            <Setter Property="ToolTip.IsOpen" Value="False" />
            <Style Selector="^ /template/ Button#EnterButton">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Content" Value="" />
                <Setter Property="Width" Value="0" />
                <Setter Property="Margin" Value="0" />
            </Style>
        </Style>
        <Style Selector="^[VerifySteps=None]">
            <Setter Property="ToolTip.IsOpen" Value="False" />
            <Style Selector="^ /template/ Button#EnterButton">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Content" Value="" />
                <Setter Property="Width" Value="0" />
                <Setter Property="Margin" Value="0" />
            </Style>
        </Style>
        <Style Selector="^[VerifySteps=VerifyToSuccess]">
            <Setter Property="ToolTip.IsOpen" Value="{Binding $self.CronExpressionCalculationResult, Converter={x:Static converters:CronPickerConverters.IsParseResultSuccessAndNotEmpty}}" />
            <Setter Property="ToolTip.Tip" Value="{Binding $self.CronExpressionCalculationResult, Converter={StaticResource ConverterCronExpressionParseToTimesResult}, ConverterParameter={Binding $self.DateTimeFormat}}" />
            <Style Selector="^ /template/ Button#EnterButton">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Content" Value="{DynamicResource CheckBoxCheckGlyph}" />
                <Setter Property="Foreground" Value="Green" />
                <Setter Property="Theme" Value="{DynamicResource InnerIconButton}" />
            </Style>
        </Style>

        <Style Selector="^[IsSecondEnabled=True]">
            <Setter Property="DefaultExpressionString" Value="* * * * * *" />
        </Style>

        <!--  clearButton  -->
        <Style Selector="^.clearButton, ^.ClearButton">
            <Style Selector="^:pointerover /template/ Button#ClearButton">
                <Setter Property="IsVisible" Value="{Binding $parent[u:CronPicker].ExpressionString, Converter={x:Static ObjectConverters.IsNotNull}}" />
            </Style>
        </Style>

        <!--  pointerover  -->
        <Style Selector="^:pointerover">
            <Style Selector="^ /template/ Border#Background">
                <Setter Property="Background" Value="{DynamicResource CalendarDatePickerPointeroverBackground}" />
            </Style>
        </Style>

        <!--  Disabled State  -->
        <Style Selector="^:disabled">
            <Style Selector="^ /template/ Border#Background">
                <Setter Property="Background" Value="{DynamicResource CalendarDatePickerDisabledBackground}" />
            </Style>

            <Style Selector="^ /template/ Button#PART_Button">
                <Setter Property="Foreground" Value="{DynamicResource CalendarDatePickerDisabledIconForeground}" />
            </Style>
            <Style Selector="^ /template/ TextBox#PART_TextBox">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Style>
        </Style>

        <!--  Focused State  -->
        <Style Selector="^:focus /template/ Border#Background">
            <Setter Property="BorderBrush" Value="{DynamicResource CalendarDatePickerFocusBorderBrush}" />
        </Style>
        <Style Selector="^:focus-within /template/ Border#Background">
            <Setter Property="BorderBrush" Value="{DynamicResource CalendarDatePickerFocusBorderBrush}" />
        </Style>
    </ControlTheme>
    <!--  CronExpressionEditor  -->
    <ControlTheme TargetType="u:CronExpressionEditor" x:Key="{x:Type u:CronExpressionEditor}">
        <Setter Property="CopySuccessMessage" Value="{DynamicResource CronPickerFormatter_CopySuccess}" />
        <Setter Property="FailedToGetClipboardMessage" Value="{DynamicResource CronPickerFormatter_FailedToGetClipboard}" />
        <Setter Property="CronExpressionParsedMessage" Value="{DynamicResource CronPickerFormatter_CronExpressionParsed}" />
        <Setter Property="CronExpressionParamsNotEnoughErrorMessage" Value="{DynamicResource CronPickerFormatter_CronExpressionParamsNotEnoughError}" />
        <Setter Property="CronPartExpressionParseErrorFormat" Value="{DynamicResource CronPickerFormatter_CronPartExpressionParseError}" />
        <Setter Property="CronPartVerifyErrorFormat" Value="{DynamicResource CronPickerFormatter_CronPartVerifyError}" />
        <Setter Property="RecentRunTimesTitleFormat" Value="{DynamicResource CronPickerFormatter_RecentRunTimesTitle}" />
        <Setter Property="Padding" Value="15,5" />
        <Setter Property="Template">
            <ControlTemplate TargetType="u:CronExpressionEditor">
                <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    Padding="{TemplateBinding Padding}">
                    <Grid RowDefinitions="Auto,*">
                        <Border
                            BoxShadow="0 0 10 4 #ccc"
                            Grid.Row="0"
                            Margin="0,0,0,20">
                            <StackPanel>
                                <u:CronPickerFieldsContainer Name="{x:Static u:CronExpressionEditor.PART_FieldsHost}" SelectedIndex="{TemplateBinding SelectedFieldIndex, Mode=TwoWay}">
                                    <u:CronPickerFieldTabItem
                                        FieldType="Second"
                                        IsVisible="{TemplateBinding IsSecondEnabled}"
                                        x:Name="TabItem_Second" />
                                    <u:CronPickerFieldTabItem FieldType="Minute" x:Name="TabItem_Minute" />
                                    <u:CronPickerFieldTabItem FieldType="Hour" x:Name="TabItem_Hour" />
                                    <u:CronPickerFieldTabItem FieldType="DayOfMonth" x:Name="TabItem_DayOfMonth" />
                                    <u:CronPickerFieldTabItem FieldType="Month" x:Name="TabItem_Month" />
                                    <u:CronPickerFieldTabItem FieldType="DayOfWeek" x:Name="TabItem_DayOfWeek" />
                                    <u:CronPickerFieldTabItem
                                        FieldType="Year"
                                        IsVisible="{TemplateBinding IsYearEnabled}"
                                        x:Name="TabItem_Year" />
                                </u:CronPickerFieldsContainer>
                                <Border Padding="{DynamicResource CronPickerFieldTabItemContentMargin}">
                                    <StackPanel Orientation="Vertical">
                                        <u:CronPickerFieldView
                                            FieldName="{Binding #TabItem_Second.Header}"
                                            FieldType="Second"
                                            IsVisible="{TemplateBinding IsSecondEnabled}"
                                            Name="{x:Static u:CronExpressionEditor.PART_SecondsField}"
                                            SelectedIndex="{TemplateBinding SecondsSelectedIndex,
                                                                            Mode=TwoWay}"
                                            SelectedItem="{TemplateBinding SecondsSelectedItem,
                                                                           Mode=TwoWay}"
                                            SelectedValue="{TemplateBinding SecondsSelectedValue,
                                                                            Mode=TwoWay}" />
                                        <u:CronPickerFieldView
                                            FieldName="{Binding #TabItem_Minute.Header}"
                                            FieldType="Minute"
                                            Name="{x:Static u:CronExpressionEditor.PART_MinutesField}"
                                            SelectedIndex="{TemplateBinding MinutesSelectedIndex,
                                                                            Mode=TwoWay}"
                                            SelectedItem="{TemplateBinding MinutesSelectedItem,
                                                                           Mode=TwoWay}"
                                            SelectedValue="{TemplateBinding MinutesSelectedValue,
                                                                            Mode=TwoWay}" />
                                        <u:CronPickerFieldView
                                            FieldName="{Binding #TabItem_Hour.Header}"
                                            FieldType="Hour"
                                            Name="{x:Static u:CronExpressionEditor.PART_HoursField}"
                                            SelectedIndex="{TemplateBinding HoursSelectedIndex,
                                                                            Mode=TwoWay}"
                                            SelectedItem="{TemplateBinding HoursSelectedItem,
                                                                           Mode=TwoWay}"
                                            SelectedValue="{TemplateBinding HoursSelectedValue,
                                                                            Mode=TwoWay}" />
                                        <u:CronPickerFieldView
                                            FieldName="{Binding #TabItem_DayOfMonth.Header}"
                                            FieldType="DayOfMonth"
                                            Name="{x:Static u:CronExpressionEditor.PART_DaysOfMonthField}"
                                            SelectedIndex="{TemplateBinding DaysOfMonthSelectedIndex,
                                                                            Mode=TwoWay}"
                                            SelectedItem="{TemplateBinding DaysOfMonthSelectedItem,
                                                                           Mode=TwoWay}"
                                            SelectedValue="{TemplateBinding DaysOfMonthSelectedValue,
                                                                            Mode=TwoWay}" />
                                        <u:CronPickerFieldView
                                            FieldName="{Binding #TabItem_Month.Header}"
                                            FieldType="Month"
                                            Name="{x:Static u:CronExpressionEditor.PART_MonthsField}"
                                            SelectedIndex="{TemplateBinding MonthsSelectedIndex,
                                                                            Mode=TwoWay}"
                                            SelectedItem="{TemplateBinding MonthsSelectedItem,
                                                                           Mode=TwoWay}"
                                            SelectedValue="{TemplateBinding MonthsSelectedValue,
                                                                            Mode=TwoWay}" />
                                        <u:CronPickerFieldView
                                            FieldName="{Binding #TabItem_DayOfWeek.Header}"
                                            FieldType="DayOfWeek"
                                            Name="{x:Static u:CronExpressionEditor.PART_DaysOfWeekField}"
                                            SelectedIndex="{TemplateBinding DaysOfWeekSelectedIndex,
                                                                            Mode=TwoWay}"
                                            SelectedItem="{TemplateBinding DaysOfWeekSelectedItem,
                                                                           Mode=TwoWay}"
                                            SelectedValue="{TemplateBinding DaysOfWeekSelectedValue,
                                                                            Mode=TwoWay}" />
                                        <u:CronPickerFieldView
                                            FieldName="{Binding #TabItem_Year.Header}"
                                            FieldType="Year"
                                            IsVisible="{TemplateBinding IsYearEnabled}"
                                            Name="{x:Static u:CronExpressionEditor.PART_YearsField}"
                                            SelectedIndex="{TemplateBinding YearsSelectedIndex,
                                                                            Mode=TwoWay}"
                                            SelectedItem="{TemplateBinding YearsSelectedItem,
                                                                           Mode=TwoWay}"
                                            SelectedValue="{TemplateBinding YearsSelectedValue,
                                                                            Mode=TwoWay}" />
                                    </StackPanel>
                                </Border>
                            </StackPanel>
                        </Border>
                        <StackPanel Grid.Row="1" Spacing="10">
                            <u:Divider
                                Content="{DynamicResource CronPicker_PartTitle_CronFieldValues}"
                                FontSize="18"
                                HorizontalAlignment="Left" />
                            <StackPanel Orientation="Horizontal" Spacing="8">
                                <StackPanel.Styles>
                                    <Style Selector="TextBox">
                                        <Setter Property="MaxWidth" Value="120" />
                                        <Setter Property="MinWidth" Value="80" />
                                    </Style>
                                </StackPanel.Styles>
                                <TextBox
                                    InnerRightContent="{DynamicResource CronFieldHeader_Second}"
                                    IsReadOnly="True"
                                    Text="{TemplateBinding Seconds}" />
                                <TextBox
                                    InnerRightContent="{DynamicResource CronFieldHeader_Minute}"
                                    IsReadOnly="True"
                                    Text="{TemplateBinding Minutes}" />
                                <TextBox
                                    InnerRightContent="{DynamicResource CronFieldHeader_Hour}"
                                    IsReadOnly="True"
                                    Text="{TemplateBinding Hours}" />
                                <TextBox
                                    InnerRightContent="{DynamicResource CronFieldHeader_DayOfMonth}"
                                    IsReadOnly="True"
                                    Text="{TemplateBinding DaysOfMonth}" />
                                <TextBox
                                    InnerRightContent="{DynamicResource CronFieldHeader_Month}"
                                    IsReadOnly="True"
                                    Text="{TemplateBinding Months}" />
                                <TextBox
                                    InnerRightContent="{DynamicResource CronFieldHeader_DayOfWeek}"
                                    IsReadOnly="True"
                                    Text="{TemplateBinding DaysOfWeek}" />
                                <TextBox
                                    InnerRightContent="{DynamicResource CronFieldHeader_Year}"
                                    IsReadOnly="True"
                                    Text="{TemplateBinding Years}" />
                            </StackPanel>
                            <u:Divider
                                Content="{DynamicResource CronPicker_PartTitle_CronExpression}"
                                FontSize="18"
                                HorizontalAlignment="Left" />
                            <TextBox
                                FontSize="18"
                                Name="{x:Static u:CronExpressionEditor.PART_CronExpression}"
                                Text="{TemplateBinding CronExpression,
                                                       Mode=TwoWay}" />
                            <StackPanel Orientation="Horizontal" Spacing="8">
                                <Button
                                    Content="{DynamicResource CronPicker_ButtonText_CronExpressionParse}"
                                    Name="PART_ParseButton"
                                    Theme="{DynamicResource SolidButton}" />
                                <Button
                                    Content="{DynamicResource CronPicker_ButtonText_CronExpressionCopy}"
                                    Name="PART_CopyButton"
                                    Theme="{DynamicResource SolidButton}" />
                                <u:Banner
                                    CanClose="True"
                                    Content="{TemplateBinding CurrentOperationResultMessage}"
                                    HorizontalContentAlignment="Left"
                                    IsVisible="{TemplateBinding IsCurrentOperationResultVisible,
                                                                Mode=TwoWay}"
                                    Type="{TemplateBinding CurrentOperationResultType}">
                                    <u:Banner.Template>
                                        <ControlTemplate TargetType="u:Banner">
                                            <Border
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Name="PART_Container"
                                                Padding="{TemplateBinding Padding}">
                                                <DockPanel>
                                                    <!--  Icon Area  -->
                                                    <Panel
                                                        IsVisible="{TemplateBinding ShowIcon}"
                                                        Margin="{DynamicResource ToastCardIconMargin}"
                                                        VerticalAlignment="Top">
                                                        <ContentPresenter Content="{TemplateBinding Icon}" />
                                                        <PathIcon
                                                            Classes="Large"
                                                            IsVisible="{TemplateBinding Icon,
                                                                                        Converter={x:Static ObjectConverters.IsNull}}"
                                                            Name="PART_BuildInIcon"
                                                            Theme="{DynamicResource InnerPathIcon}" />
                                                    </Panel>
                                                    <ContentControl
                                                        Content="{TemplateBinding Content}"
                                                        Margin="{DynamicResource ToastCardContentMargin}"
                                                        MaxWidth="{DynamicResource ToastCardContentMaxWidth}"
                                                        VerticalContentAlignment="Center"
                                                        x:Name="PART_Content">
                                                        <ContentControl.DataTemplates>
                                                            <DataTemplate DataType="u:IToast">
                                                                <SelectableTextBlock
                                                                    FontWeight="{DynamicResource ToastCardContentFontWeight}"
                                                                    Foreground="{DynamicResource ToastCardContentForeground}"
                                                                    Text="{Binding Content}"
                                                                    TextWrapping="Wrap" />
                                                            </DataTemplate>
                                                            <DataTemplate DataType="x:String">
                                                                <SelectableTextBlock
                                                                    FontWeight="{DynamicResource ToastCardContentFontWeight}"
                                                                    Foreground="{DynamicResource ToastCardContentForeground}"
                                                                    Text="{Binding}"
                                                                    TextWrapping="Wrap" />
                                                            </DataTemplate>
                                                        </ContentControl.DataTemplates>
                                                    </ContentControl>
                                                    <!--<ContentPresenter
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    TextWrapping="Wrap" />-->
                                                    <Button
                                                        HorizontalAlignment="Right"
                                                        IsVisible="{TemplateBinding CanClose}"
                                                        Margin="{DynamicResource BannerCloseButtonMargin}"
                                                        Name="{x:Static u:Banner.PART_CloseButton}"
                                                        Theme="{DynamicResource OverlayCloseButton}"
                                                        VerticalAlignment="Top" />
                                                </DockPanel>
                                            </Border>
                                        </ControlTemplate>
                                    </u:Banner.Template>
                                </u:Banner>
                            </StackPanel>
                            <u:Divider
                                Content="{TemplateBinding RecentRunTimesTitle}"
                                FontSize="18"
                                HorizontalAlignment="Left" />
                            <TextBox
                                Classes="TextArea"
                                FontSize="18"
                                Height="260"
                                IsReadOnly="True"
                                Name="PART_NextRunTimes"
                                Text="{TemplateBinding CronExpressionCalculationResult,
                                                       Mode=OneWay,
                                                       Converter={StaticResource ConverterCronExpressionParseToTimesResult},
                                                       ConverterParameter={TemplateBinding DateTimeFormat}}" />
                        </StackPanel>
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter>
        <!--  选项卡动作  -->
        <Style Selector="^[SelectedFieldIndex=-1]">
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_SecondsField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MinutesField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_HoursField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfMonthField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MonthsField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfWeekField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_YearsField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
        </Style>
        <Style Selector="^[SelectedFieldIndex=0]">
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_SecondsField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MinutesField">
                <Setter Property="IsVisible" Value="True" />
                <Setter Property="Height" Value="0" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_HoursField">
                <Setter Property="IsVisible" Value="True" />
                <Setter Property="Height" Value="0" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfMonthField">
                <Setter Property="IsVisible" Value="True" />
                <Setter Property="Height" Value="0" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MonthsField">
                <Setter Property="IsVisible" Value="True" />
                <Setter Property="Height" Value="0" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfWeekField">
                <Setter Property="IsVisible" Value="True" />
                <Setter Property="Height" Value="0" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_YearsField">
                <Setter Property="IsVisible" Value="True" />
                <Setter Property="Height" Value="0" />
            </Style>
        </Style>
        <Style Selector="^[SelectedFieldIndex=1]">
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_SecondsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MinutesField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_HoursField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfMonthField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MonthsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfWeekField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_YearsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </Style>
        <Style Selector="^[SelectedFieldIndex=2]">
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_SecondsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MinutesField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_HoursField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfMonthField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MonthsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfWeekField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_YearsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </Style>
        <Style Selector="^[SelectedFieldIndex=3]">
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_SecondsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MinutesField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_HoursField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfMonthField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MonthsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfWeekField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_YearsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </Style>
        <Style Selector="^[SelectedFieldIndex=4]">
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_SecondsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MinutesField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_HoursField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfMonthField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MonthsField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfWeekField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_YearsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </Style>
        <Style Selector="^[SelectedFieldIndex=5]">
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_SecondsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MinutesField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_HoursField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfMonthField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MonthsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfWeekField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_YearsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </Style>
        <Style Selector="^[SelectedFieldIndex=6]">
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_SecondsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MinutesField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_HoursField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfMonthField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_MonthsField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_DaysOfWeekField">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ u|CronPickerFieldView#PART_YearsField">
                <Setter Property="IsVisible" Value="True" />
            </Style>
        </Style>
        <!--  cron 表达式解析异常错误UI样式  -->
        <Style Selector="^ /template/ TextBox#PART_CronExpression">
            <Style Selector="^ /template/ DataValidationErrors">
                <Setter Property="Theme" Value="{DynamicResource TooltipLineDataValidationErrors}" />
            </Style>
        </Style>
    </ControlTheme>
    <!--  CronPickerFieldsContainer  -->
    <ControlTheme
        BasedOn="{StaticResource {x:Type TabControl}}"
        TargetType="u:CronPickerFieldsContainer"
        x:Key="{x:Type u:CronPickerFieldsContainer}" />
    <!--  u:CronPickerRulerBoxItem  -->
    <ControlTheme TargetType="u:CronPickerRulerBoxItem" x:Key="{x:Type u:CronPickerRulerBoxItem}">
        <Setter Property="Template">
            <ControlTemplate TargetType="u:CronPickerRulerBoxItem">
                <ContentPresenter
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    FontSize="{TemplateBinding FontSize}"
                    Name="PART_ContentPresenter"
                    Padding="{TemplateBinding Padding}"
                    RecognizesAccessKey="True" />
            </ControlTemplate>
        </Setter>
    </ControlTheme>
    <!--  u:CronPickerFieldView  -->
    <ControlTheme TargetType="u:CronPickerFieldView" x:Key="{x:Type u:CronPickerFieldView}">
        <Setter Property="ItemsPanel">
            <ItemsPanelTemplate>
                <StackPanel Orientation="Vertical" Spacing="10" />
            </ItemsPanelTemplate>
        </Setter>
        <Setter Property="Template">
            <ControlTemplate TargetType="u:CronPickerFieldView">
                <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    Padding="{TemplateBinding Padding}">
                    <ItemsPresenter ItemsPanel="{TemplateBinding ItemsPanel}" Name="PART_ItemsPresenter" />
                </Border>
            </ControlTemplate>
        </Setter>
    </ControlTheme>
    <!--  u:CronPickerRulerSelector  -->
    <ControlTheme TargetType="u:CronPickerRulerSelector" x:Key="{x:Type u:CronPickerRulerSelector}">
        <Setter Property="Background" Value="{DynamicResource TabItemLinePipeBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TabItemLineHeaderForeground}" />
        <!-- <Setter Property="Margin" Value="0" /> -->
        <Setter Property="Padding" Value="{DynamicResource CheckBoxCardPadding}" />
        <Setter Property="FontSize" Value="{DynamicResource CronPickerRulerSelectorFontSize}" />
        <Setter Property="MinHeight" Value="5" />
        <!-- <Setter Property="Padding" Value="{DynamicResource CheckBoxCardPadding}" /> -->
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="CornerRadius" Value="{DynamicResource CheckBoxCardCornerRadius}" />
        <Setter Property="BorderThickness" Value="{DynamicResource CheckBoxCardBorderThickness}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <ControlTemplate TargetType="u:CronPickerRulerSelector">
                <DockPanel>
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        DockPanel.Dock="{TemplateBinding StripPlacement}"
                        HorizontalAlignment="Left"
                        Name="PART_LayoutRoot">
                        <Panel>
                            <Border
                                HorizontalAlignment="Left"
                                Name="SelectRootBorder"
                                Padding="{TemplateBinding Padding}">
                                <Grid
                                    ColumnDefinitions="Auto,*"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Panel
                                        Grid.Column="0"
                                        Margin="{DynamicResource CheckBoxBoxMargin}"
                                        VerticalAlignment="Top">
                                        <Border
                                            Background="{DynamicResource CheckBoxDefaultBackground}"
                                            BorderBrush="{DynamicResource CheckBoxDefaultBorderBrush}"
                                            BorderThickness="{DynamicResource CheckBoxBoxBorderThickness}"
                                            CornerRadius="{DynamicResource CheckBoxBoxCornerRadius}"
                                            Height="{DynamicResource CheckBoxBoxHeight}"
                                            Name="NormalRectangle"
                                            UseLayoutRounding="False"
                                            Width="{DynamicResource CheckBoxBoxWidth}" />
                                        <PathIcon
                                            Foreground="{DynamicResource CheckBoxGlyphFill}"
                                            Height="{DynamicResource CheckBoxBoxGlyphHeight}"
                                            Name="CheckGlyph"
                                            Theme="{DynamicResource InnerPathIcon}"
                                            Width="{DynamicResource CheckBoxBoxGlyphWidth}" />
                                    </Panel>

                                    <ContentPresenter
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        FontSize="{DynamicResource CronPickerRulerSelectorHeaderFontSize}"
                                        Grid.Column="1"
                                        IsVisible="{TemplateBinding Header,
                                                                    Converter={x:Static ObjectConverters.IsNotNull}}"
                                        Margin="{DynamicResource CheckBoxContentMargin}"
                                        Name="{x:Static u:CronPickerRulerSelector.PART_HeaderPresenter}"
                                        RecognizesAccessKey="True"
                                        TextWrapping="Wrap" />
                                </Grid>
                            </Border>
                            <Border
                                Background="{DynamicResource TabItemLinePipeBackground}"
                                IsVisible="True"
                                Name="PART_SelectedPipe"
                                UseLayoutRounding="False" />
                        </Panel>
                    </Border>
                    <ContentPresenter
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontWeight="{TemplateBinding FontWeight}"
                        Foreground="{TemplateBinding Foreground}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        IsEnabled="{TemplateBinding IsSelected}"
                        Name="PART_ContentPresenter"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </DockPanel>
            </ControlTemplate>
        </Setter>

        <!--  Selected state  -->
        <Style Selector="^:not(:selected)">
            <Setter Property="Cursor" Value="Hand" />
            <Style Selector="^:pointerover /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource TabItemLineHeaderPointeroverForeground}" />
            </Style>
            <Style Selector="^:pointerover /template/ Border#PART_SelectedPipe">
                <Setter Property="Background" Value="{DynamicResource TabItemLinePipePointeroverBorderBrush}" />
            </Style>
            <Style Selector="^:pressed /template/ Border#PART_SelectedPipe">
                <Setter Property="Background" Value="{DynamicResource TabItemLinePipePressedBorderBrush}" />
            </Style>
        </Style>

        <Style Selector="^:selected">
            <Style Selector="^ /template/ Border#PART_LayoutRoot">
                <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCardCheckedBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource CheckBoxCardCheckedBackground}" />
            </Style>
            <Style Selector="^ /template/ Border#NormalRectangle">
                <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCheckedDefaultBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource CheckBoxCheckedDefaultBackground}" />
            </Style>
            <Style Selector="^ /template/ PathIcon#CheckGlyph">
                <Setter Property="Data" Value="{DynamicResource CheckBoxCheckGlyph}" />
                <Setter Property="Opacity" Value="1" />
            </Style>

            <!--  Selected Pointerover State  -->
            <Style Selector="^:pointerover">
                <Style Selector="^ /template/ Border#NormalRectangle">
                    <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCheckedPointeroverBorderBrush}" />
                    <Setter Property="Background" Value="{DynamicResource CheckBoxCheckedPointeroverBackground}" />
                </Style>
                <Style Selector="^ /template/ Border#PART_LayoutRoot">
                    <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCardCheckedPointeroverBorderBrush}" />
                </Style>
            </Style>

            <!--  Selected Pressed State  -->
            <Style Selector="^:pressed">
                <Style Selector="^ /template/ Border#NormalRectangle">
                    <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCheckedPressedBorderBrush}" />
                    <Setter Property="Background" Value="{DynamicResource CheckBoxCheckedPressedBackground}" />
                </Style>
                <Style Selector="^ /template/ Border#PART_LayoutRoot">
                    <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCardCheckedPressedBorderBrush}" />
                </Style>
                <Style Selector="^ /template/ Border#PART_LayoutRoot">
                    <Setter Property="Background" Value="{DynamicResource TabItemHeaderBackgroundSelectedPressed}" />
                    <Setter Property="TextElement.Foreground" Value="{DynamicResource TabItemHeaderForegroundSelectedPressed}" />
                </Style>
            </Style>

            <!--  Selected Disabled State  -->
            <Style Selector="^:disabled">
                <Style Selector="^ /template/ Border#PART_LayoutRoot">
                    <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCardCheckedDisabledBorderBrush}" />
                </Style>
                <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                    <Setter Property="Foreground" Value="{DynamicResource CheckBoxDisabledForeground}" />
                </Style>
                <Style Selector="^ /template/ Border#NormalRectangle">
                    <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCheckedDisabledBorderBrush}" />
                    <Setter Property="Background" Value="{DynamicResource CheckBoxCheckedDisabledBackground}" />
                </Style>

                <Style Selector="^ /template/ PathIcon#CheckGlyph">
                    <Setter Property="Foreground" Value="{DynamicResource CheckBoxGlyphDisabledFill}" />
                </Style>
            </Style>

            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource TabItemLineHeaderSelectedForeground}" />
                <Setter Property="FontWeight" Value="{DynamicResource TabItemSelectedFontWeight}" />
            </Style>

            <Style Selector="^ /template/ Border#PART_SelectedPipe">
                <Setter Property="Background" Value="{DynamicResource TabItemLinePipeSelectedBackground}" />
            </Style>
        </Style>

        <!--  Unchecked Pointerover State  -->
        <Style Selector="^:pointerover">
            <Style Selector="^ /template/ Border#NormalRectangle">
                <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxPointeroverBorderBrush}" />
            </Style>
            <Style Selector="^ /template/ Border#PART_LayoutRoot">
                <Setter Property="Background" Value="{DynamicResource CheckBoxCardPointeroverBackground}" />
            </Style>
        </Style>

        <!--  Unchecked Pressed State  -->
        <Style Selector="^:pressed">
            <Style Selector="^ /template/ Border#NormalRectangle">
                <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxPressedBorderBrush}" />
            </Style>
            <Style Selector="^ /template/ Border#PART_LayoutRoot">
                <Setter Property="Background" Value="{DynamicResource CheckBoxCardPressedBackground}" />
            </Style>
        </Style>

        <!--  Disabled state  -->
        <Style Selector="^:disabled">
            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource CheckBoxDisabledForeground}" />
            </Style>
            <Style Selector="^ /template/ Border#NormalRectangle">
                <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxDefaultDisabledBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource CheckBoxDefaultDisabledBackground}" />
            </Style>
            <Style Selector="^ /template/ Border#PART_LayoutRoot">
                <Setter Property="Background" Value="{DynamicResource TabItemHeaderBackgroundDisabled}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource TabItemHeaderForegroundDisabled}" />
            </Style>
        </Style>

        <!--  TabStripPlacement States Group  -->
        <Style Selector="^[StripPlacement=Top]">
            <Style Selector="^ /template/Border#PART_SelectedPipe">
                <Setter Property="Height" Value="2" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#SelectRootBorder">
                <Setter Property="Margin" Value="0,0,0,4" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Margin" Value="{DynamicResource CronPickerRulerSelectorContentMargin_HeaderTop}" />
            </Style>
        </Style>
        <Style Selector="^[StripPlacement=Bottom]">
            <Style Selector="^ /template/Border#PART_SelectedPipe">
                <Setter Property="Height" Value="2" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Top" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#SelectRootBorder">
                <Setter Property="Margin" Value="0,4,0,0" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Margin" Value="{DynamicResource CronPickerRulerSelectorContentMargin_HeaderBottom}" />
            </Style>
        </Style>
        <Style Selector="^[StripPlacement=Left]">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Style Selector="^/template/ Border#PART_SelectedPipe">
                <Setter Property="Width" Value="2" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
            </Style>
            <Style Selector="^ /template/ Label#SelectRootBorder">
                <Setter Property="Margin" Value="8,0,0,0" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Margin" Value="{DynamicResource CronPickerRulerSelectorContentMargin_HeaderLeft}" />
            </Style>
        </Style>
        <Style Selector="^[StripPlacement=Right]">
            <Setter Property="HorizontalContentAlignment" Value="Right" />
            <Style Selector="^ /template/ Border#PART_SelectedPipe">
                <Setter Property="Width" Value="2" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#SelectRootBorder">
                <Setter Property="Margin" Value="0,0,8,0" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Margin" Value="{DynamicResource CronPickerRulerSelectorContentMargin_HeaderRight}" />
            </Style>
        </Style>
    </ControlTheme>
    <!--  u:CronPickerFieldTabItem  -->
    <ControlTheme
        BasedOn="{StaticResource {x:Type TabItem}}"
        TargetType="u:CronPickerFieldTabItem"
        x:Key="{x:Type u:CronPickerFieldTabItem}">
        <Setter Property="Padding" Value="{DynamicResource CronPickerFieldTabItemPadding}" />
        <Setter Property="FontSize" Value="{DynamicResource CronPickerFieldTabItemFontSize}" />
        <!--  header  -->
        <Style Selector="^[FieldType=Second]">
            <Setter Property="Header" Value="{DynamicResource CronFieldHeader_Second}" />
        </Style>
        <Style Selector="^[FieldType=Minute]">
            <Setter Property="Header" Value="{DynamicResource CronFieldHeader_Minute}" />
        </Style>
        <Style Selector="^[FieldType=Hour]">
            <Setter Property="Header" Value="{DynamicResource CronFieldHeader_Hour}" />
        </Style>
        <Style Selector="^[FieldType=DayOfMonth]">
            <Setter Property="Header" Value="{DynamicResource CronFieldHeader_DayOfMonth}" />
        </Style>
        <Style Selector="^[FieldType=Month]">
            <Setter Property="Header" Value="{DynamicResource CronFieldHeader_Month}" />
        </Style>
        <Style Selector="^[FieldType=DayOfWeek]">
            <Setter Property="Header" Value="{DynamicResource CronFieldHeader_DayOfWeek}" />
        </Style>
        <Style Selector="^[FieldType=Year]">
            <Setter Property="Header" Value="{DynamicResource CronFieldHeader_Year}" />
        </Style>
        <Style Selector="^[FieldType=Unknown]">
            <Setter Property="Header" Value="wrong type" />
        </Style>
    </ControlTheme>
    <!--  MultiplePureCardCheckGroupListBox : ListBox  -->
    <ControlTheme
        BasedOn="{StaticResource RadioGroupListBox}"
        TargetType="ListBox"
        x:Key="MultiplePureCardCheckGroupListBox">
        <Setter Property="ItemContainerTheme" Value="{DynamicResource MultiplePureCardCheckGroupListBoxItem}" />
        <Setter Property="SelectionMode" Value="Multiple" />
    </ControlTheme>
    <!--  MultiplePureCardCheckGroupListBoxItem ListBoxItem  -->
    <ControlTheme TargetType="ListBoxItem" x:Key="MultiplePureCardCheckGroupListBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{DynamicResource CheckBoxCardPadding}" />
        <Setter Property="FontSize" Value="{DynamicResource CheckBoxFontSize}" />
        <Setter Property="CornerRadius" Value="{DynamicResource CheckBoxCardCornerRadius}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{DynamicResource CheckBoxCardBorderThickness}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <ControlTemplate TargetType="ListBoxItem">
                <CheckBox
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    FontWeight="{TemplateBinding FontWeight}"
                    Foreground="{TemplateBinding Foreground}"
                    Height="{TemplateBinding Height}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    IsChecked="{TemplateBinding IsSelected,
                                                Mode=TwoWay}"
                    Name="PART_CheckBox"
                    Padding="{TemplateBinding Padding}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    Width="{TemplateBinding Width}" />
            </ControlTemplate>
        </Setter>
        <Style Selector="^ /template/ CheckBox#PART_CheckBox">
            <Setter Property="Theme" Value="{DynamicResource LPureCardCheckBox}" />
        </Style>
        <Style Selector="^:pointerover">
            <Setter Property="Background" Value="{DynamicResource RadioButtonCardUncheckPointeroverBackground}" />
        </Style>
        <Style Selector="^:pressed">
            <Setter Property="Background" Value="{DynamicResource RadioButtonCardUncheckPressedBackground}" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style Selector="^:disabled">
            <Style Selector="^ /template/ CheckBox#PART_CheckBox">
                <Setter Property="Foreground" Value="{DynamicResource RadioButtonDisabledForeground}" />
            </Style>
        </Style>
        <Style Selector="^:selected">
            <Setter Property="Background" Value="{DynamicResource RadioButtonCardCheckedBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource RadioButtonCardCheckDefaultBorderBrush}" />
            <Style Selector="^:pointerover">
                <Setter Property="BorderBrush" Value="{DynamicResource RadioButtonCardCheckPointeroverBorderBrush}" />
            </Style>
            <Style Selector="^:pressed">
                <Setter Property="BorderBrush" Value="{DynamicResource RadioButtonCardCheckPressedBorderBrush}" />
            </Style>
            <Style Selector="^:disabled">
                <Setter Property="BorderBrush" Value="{DynamicResource RadioButtonCheckIconDisabledBackground}" />
                <Setter Property="Background" Value="{DynamicResource RadioButtonCardCheckedBackground}" />
                <Style Selector="^ /template/ CheckBox#PART_CheckBox">
                    <Setter Property="Foreground" Value="{DynamicResource RadioButtonDisabledForeground}" />
                </Style>
            </Style>
        </Style>
    </ControlTheme>
    <!--  LPureCardCheckBox : CheckBox  -->
    <ControlTheme TargetType="CheckBox" x:Key="LPureCardCheckBox">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{DynamicResource CheckBoxCardPadding}" />
        <Setter Property="FontSize" Value="{DynamicResource CheckBoxFontSize}" />
        <Setter Property="CornerRadius" Value="{DynamicResource CheckBoxCardCornerRadius}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{DynamicResource CheckBoxCardBorderThickness}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <ControlTemplate TargetType="CheckBox">
                <ContentPresenter
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    Foreground="{TemplateBinding Foreground}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    Name="PART_ContentPresenter"
                    Padding="{TemplateBinding Padding}"
                    RecognizesAccessKey="True"
                    TextWrapping="Wrap"
                    UseLayoutRounding="False"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </ControlTemplate>
        </Setter>

        <!--  Unchecked Pointerover State  -->
        <Style Selector="^:pointerover">
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource CheckBoxCardPointeroverBackground}" />
            </Style>
        </Style>

        <!--  Unchecked Pressed State  -->
        <Style Selector="^:pressed">
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource CheckBoxCardPressedBackground}" />
            </Style>
        </Style>

        <!--  Unchecked Disabled state  -->
        <Style Selector="^:disabled">
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource CheckBoxDisabledForeground}" />
            </Style>
        </Style>

        <Style Selector="^:checked">
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCardCheckedBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource CheckBoxCardCheckedBackground}" />
            </Style>
            <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCardCheckedPointeroverBorderBrush}" />
            </Style>
            <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCardCheckedPressedBorderBrush}" />
            </Style>
            <!--  Checked Disabled State  -->
            <Style Selector="^:disabled">
                <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCardCheckedDisabledBorderBrush}" />
                </Style>
                <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="Foreground" Value="{DynamicResource CheckBoxDisabledForeground}" />
                </Style>
            </Style>
        </Style>

        <Style Selector="^:indeterminate">
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCardCheckedBorderBrush}" />
            </Style>
            <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCardCheckedPointeroverBorderBrush}" />
            </Style>
            <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCardCheckedPressedBorderBrush}" />
            </Style>
            <Style Selector="^:disabled">
                <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxCardCheckedDisabledBorderBrush}" />
                </Style>
            </Style>
        </Style>
    </ControlTheme>
    <ControlTheme TargetType="DataValidationErrors" x:Key="TooltipLineDataValidationErrors">
        <Setter Property="Template">
            <ControlTemplate TargetType="DataValidationErrors">
                <DockPanel LastChildFill="True">
                    <ContentControl
                        Content="{Binding (DataValidationErrors.Errors)}"
                        ContentTemplate="{TemplateBinding ErrorTemplate}"
                        DataContext="{TemplateBinding Owner}"
                        DockPanel.Dock="Bottom"
                        IsVisible="{Binding (DataValidationErrors.HasErrors)}"
                        Margin="0,4,0,0"
                        Name="InlineDataValidationContentControl" />
                    <ContentPresenter
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Name="PART_ContentPresenter"
                        Padding="{TemplateBinding Padding}" />
                </DockPanel>
            </ControlTemplate>
        </Setter>
        <Setter Property="ErrorTemplate">
            <DataTemplate>
                <Panel Background="Transparent" Name="PART_InlineErrorTemplatePanel">
                    <Panel.Styles>
                        <Style Selector="Panel#PART_InlineErrorTemplatePanel">
                            <Setter Property="Margin" Value="8,0" />
                        </Style>
                        <Style Selector="Panel#PART_InlineErrorTemplatePanel ToolTip">
                            <Setter Property="BorderBrush" Value="{DynamicResource DataValidationErrorsForeground}" />
                        </Style>
                        <Style Selector="Panel#PART_InlineErrorTemplatePanel ToolTip TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </Panel.Styles>
                    <ToolTip.Tip>
                        <ItemsControl ItemsSource="{Binding}" x:DataType="collections:IEnumerable" />
                    </ToolTip.Tip>
                    <Grid RowDefinitions="*,Auto">
                        <TextBlock
                            FontSize="{DynamicResource DataValidationErrorsFontSize}"
                            FontStyle="Italic"
                            Foreground="{DynamicResource DataValidationErrorsForeground}"
                            Grid.Row="0"
                            Text="{Binding [0]}"
                            TextTrimming="CharacterEllipsis"
                            x:DataType="DataValidationErrors" />
                        <Border
                            Background="{DynamicResource DataValidationErrorsForeground}"
                            Grid.Row="1"
                            Height="1"
                            IsVisible="True"
                            Name="PART_Underline"
                            UseLayoutRounding="False" />
                    </Grid>
                </Panel>
                <!--<ItemsControl
                    Foreground="{DynamicResource DataValidationErrorsForeground}"
                    ItemsSource="{Binding}"
                    x:DataType="DataValidationErrors">
                    <ItemsControl.Styles>
                        <Style Selector="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </ItemsControl.Styles>
                </ItemsControl>-->
            </DataTemplate>
        </Setter>
    </ControlTheme>

</ResourceDictionary>
